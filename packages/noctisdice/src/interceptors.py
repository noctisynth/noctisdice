# Initialized `interceptors.py` generated by ipm.
# Regists your pre-interceptors and interceptors here.
# Documents at https://ipm.hydroroll.team/

from infini.register import Register
from infini.router import Router
from infini.typing import Literal
from infini.input import Input
from infini.output import Output

from diceutils.status import StatusPool
from diceutils.utils import get_group_id


class NotCommand(Router):
    type: Literal["not_command"] = "not_command"
    prefix: tuple = (".", "/", "ã€‚")

    def match(self, plain_text: str) -> bool:
        plain_text = plain_text.strip()
        if plain_text:
            if plain_text.startswith(self.prefix):
                plain_text = plain_text[1:]
                return any([not plain_text.startswith(sign) for sign in self.signs])

        return False


class NotToMe(Router):
    type: Literal["*"] = "*"

    def __init__(self) -> None:
        self.signs = []

    def match(self, input: Input) -> bool:
        return not input.is_tome()


register = Register()


@register.pre_interceptor(NotCommand("bot"), priority=0)
def bot_status_pre_interceptor(input: Input):
    status = StatusPool.get("dicergirl")
    if not (status.get(get_group_id(input), "command") or False):
        return Output.empty()
    return input


@register.pre_interceptor(NotToMe(), priority=0)
def not_to_me_pre_interceptor():
    return Output.empty()
